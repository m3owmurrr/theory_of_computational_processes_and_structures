// Определите нормальный алгоритм вычисления НОД двух двоичных чисел
T = {0,1,:,*,#,/,\,|,&,a,b,A,B,+,i,j,%,@,[,],J,K,L,M,m,N,?,(,u,^,!,t,v,d,e,_,k,y,),z}

// a-0, b-1
// перенос цифры из 2ого числа влево 
1a->a1
0a->a0
:a->a:
1b->b1
0b->b0
:b->b:

// перенос разряда
0j->1
1j->j0
j->1

// перенос результата влево
1A->A1
0A->A0
/A->A/
1B->B1
0B->B0
/B->B/
\B->+B\
\A->+A\
1+A->+A1
0+A->+A0
1+B->+B1
0+B->+B0
0i+A->i0
0i+B->i1
1i+A->i1
1i+B->ji0
i+A->i0
i+B->i1

// умножение
1#a->A#a1
1#b->B#b1
0#a->A#a0
0#b->A#b0

i0->0
i1->1
1\->i\1
0\->i\0

/#b->/*
/#a->/*

*0->0*
*1->1*
//*:|->:  	// начало деления
*:->#:*
// замена в конце
*->&

// замена цифр 2 слова на 1 итерации
0&|->a|0
1&|->b|1
// на других итерациях
0&->a|0
1&->b|1
// убираем следы умножения
i\->$
#:&|->[

// готовимся к вычислению нод
]->i\/*


// вычисляем нод
|@->@|
@|->[|
|0 -> 0||
1 -> 0|
0 -> $
?|->|(?
(?->(
JKLM?->u
|(->(|
J(->(J
K(->(K
L(->(L
M(->(M
[(->([
(->|
M| -> mM
M -> $
|m->m|
Lm->|L|
|J->J|
|K|->K
KL->KLM
JK->N
N|->|N
|NL|->NL
NL->$

|u->u^
/u->u/
[u->u
u-> $

%! -> !%
%^ -> %!
!^ -> !!
^! -> t
t! -> !t
t% -> %t
%t -> %v^
t -> ^
%v -> )d
)d -> d)
^d -> d^
) -> %
! -> $
d -> ^_
/^ -> eyk
k^ -> kk
k -> ^
^e -> e^
y -> %
e -> $
^_ -> |

% ->. $

[ -> @JKLM?


//=========History========//
//101:11
//10:11
//10:1
//10:10
//]101:11
//]101:10
//]100:10
//]10:10
//]110:10
//]100:11
//]100:1
//=========History========//
//100000
//400
//101
//101:1011
//111:11
//1111:11
